TASK1:

1.) What do you mean by Git and Github?
Ans.
Git:
1. Distributed version control system
          Distributed- A copy of the file is saved in a local repository (local system) and also in the remote repository ( Server)
           VCS- It records the changes made to a file or a set of files over time so that the specific versions can be recalled later.
2.Developed by Linus Torvald (2005) for the developers working on the Linux kernel.
3.Used to merge sources from different people and maintaining the versions.
4.free and open-source platform
GitHub:
1.A web user interface
2.Cloud hosting services
3.Allows to maintain the git repositories in the cloud.

2.)Why Git is so popular and used in most of the projects?
Ans.
1.We also have Dropbox/google docs and other tools which allows keeping track of the history of files and multiple people working on the same file but Git has more advanced and sophisticated features of collaboration.
2.Also Provides features like trunk-based development to easily work on previous versions by creating branches.
3.It is designed to handle everything from small to very large projects with speed and efficiency.
4.Used by several software developers and also creative coders.

3)What is a version control system? How Git is a VCS?
Ans.
VCS- It records the changes made to a file or set of files over time so that we can recall the specific versions later.
Git is a distributed version control system(DVCS) in which every change made to a file will be saved as a new version which can be recalled later.

4.)What are other platforms similar to Github?
Ans.
1.Gitlab
2.Atlassian Big bucket
3.SourceForge
4.Cloud source repositories
5.Apache Allura
6.GitKraken

5.)What are you interested in learning of Git and Github? 
Ans.
 Git and Github are open source platforms where I can manage all my projects and also get feedback about my projects. 
 Even other people can also be benefited by placing the files in the open-source platform. 
 It also helps me to collaborate with my peers in working with project.

TASK2:

1. What do you understand by Repository, in context to Git?
Ans.
Git repository is a .git/ folder in a project which keeps track of all changes that made to the files in the project and it builds the history over time.
When git repository is deleted then the entire history of the project will be deleted.

2.How does git work? Share with us it's the whole workflow in the most precise way possible.
Ans.
Working Copy - Staging Area - Local Repository - Remote Repository

1. Files are created in working copy I.e Local machine
2.Git keeps track of all projects by creating a repository.
The repository can be created using Gitbash by the command (git init)
3.Files are added to the staging area by using the command (git add .)/( git add filename)
Staging area-files that are ready to commit to the local repository is placed in the staging area
4.Files in the staging area are saved in the local repository by using the command(git commit -m "message")
5.Now, Files in the local repository are saved to the remote repository to make them public by using a commanding push.
6.files can also be taken from the remote repository to local repository by using the command fetch.
7.we use pull command to take the files from the remote repository to the local repository and also to the local system.
This is how git works.

3.Link to my repository:

https://github.com/SindhujaKoduru89/Bussiness_Website

TASK3:

Now you need to do the following things in order to complete this task as
completed.

1. Fork this repo Github Repo
2. Clone it.
3. Do the following changes with your master branch
	a. Create a directory with your name
	b. Add 2 txt files in that directory, one in which you add your
	introduction and in second you can add the questions and
	answers of Day 1 and Day 2 tasks.
	c. Commit the changes you have done, after that push it to github.
	d. Lastly, make a PR with the changes you have done.
Once you have done it, again do the following:

1. Create a new branch at your local.
2. Make some changes using that branch.
3. Commit the changes and push that newly created branch to github.
4. Once done, make a PR with this newly created branch.